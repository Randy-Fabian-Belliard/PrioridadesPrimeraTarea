@page "/R_Sistemas"
@inject SistemasServices SistemasServices;


 <EditForm Model="sistema" OnValidSubmit="Guardar">
     <DataAnnotationsValidator />
     <div class="card">
        <div class="card-header">
            <h1>Registro de Sitemas</h1>
        </div>
        <div class="card-body">

            <div>
                <label>Nombre:</label>
                <InputText @bind-Value="sistema.Nombre" class="form-control"></InputText>
                <ValidationMessage For="@(() => sistema.Nombre)" />
            </div>
        </div>
        <div class="card-footer d-flex justify-content-center">

            <button type="submit" class="btn btn-outline-success">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-file-earmark-text-fill" viewBox="0 0 16 16">
                    <path d="M9.293 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V4.707A1 1 0 0 0 13.707 4L10 .293A1 1 0 0 0 9.293 0M9.5 3.5v-2l3 3h-2a1 1 0 0 1-1-1M4.5 9a.5.5 0 0 1 0-1h7a.5.5 0 0 1 0 1zM4 10.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5m.5 2.5a.5.5 0 0 1 0-1h4a.5.5 0 0 1 0 1z" />
                </svg>Crear
            </button>

        </div>    

     </div>

 </EditForm>




@code {
    private string sistemasForm = "sistemasForm";
    [Parameter]
    public int SistemaId { get; set; }

    public Sistemas sistema = new Sistemas();
    private bool nombreExistente = false;

    protected override async Task OnInitializedAsync()
    {
        if (SistemaId > 0)
        {
            sistema.SistemaId = SistemaId;
            await Buscar();
        }
    }

    public async Task Buscar()
    {
        var sistemaEncontrado = await SistemasServices.Buscar(sistema.SistemaId);

        if (sistemaEncontrado != null)
            this.sistema = sistemaEncontrado;
    }

    public bool Validar()
    {
        nombreExistente = false;

        var sistemaExistente = SistemasServices.BuscarPorNombre(sistema.Nombre);

        if (sistemaExistente != null && sistemaExistente.SistemaId != sistema.SistemaId)
        {
            nombreExistente = true;
            return false;
        }
        return !string.IsNullOrEmpty(sistema.Nombre);
    }

    public void Nuevo()
    {
        this.sistema = new Sistemas();
        nombreExistente = false;
    }

    public async Task Guardar()
    {
        if (Validar() && await SistemasServices.Guardar(this.sistema))
        {
            Nuevo();
        }
    }

    public async Task Eliminar()
    {
        if (await SistemasServices.Eliminar(this.sistema))
        {
            Nuevo();
        }
    }
}